通俗一点来讲，动态规划和其它遍历算法(如深/广度优先搜索)都是将原问题拆成多个子问题然后求解，
他们之间最本质的区别是，动态规划保存子问题的解，避免重复计算。解决动态规划问题的关键是找到状态转移方程，
这样我们可以通过计算和储存子问题的解来求解最终问题。

我们可以认为，动态规划=递归+记忆，也可以称作记忆化递归，

写动态规划的逻辑思路：（最简单的例子就是斐波那契数列）
    先想递归
    发现重复计算
    通过记忆化等方法弄掉重复计算
    最后看下能不能通过利用计算顺序来做到去掉递归用“刷表”方式直接顺序计算，能搞定最好搞不定拉倒